<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Waylan Punch</title>
  
  <subtitle>WP</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://waylanpunch.github.io/"/>
  <updated>2019-07-28T02:28:18.493Z</updated>
  <id>https://waylanpunch.github.io/</id>
  
  <author>
    <name>Waylan Punch</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MongoDB作为静态文件服务器使用</title>
    <link href="https://waylanpunch.github.io/2019/07/27/mongodb-fileserver/"/>
    <id>https://waylanpunch.github.io/2019/07/27/mongodb-fileserver/</id>
    <published>2019-07-27T12:07:15.000Z</published>
    <updated>2019-07-28T02:28:18.493Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-创建mongodb数据库&quot;&gt;&lt;a href=&quot;#1-创建mongodb数据库&quot; class=&quot;headerlink&quot; title=&quot;1.创建mongodb数据库&quot;&gt;&lt;/a&gt;1.创建mongodb数据库&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker exec -it mymongodb mongo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show dbs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use filedb;// 创建一个名为&amp;quot;filedb&amp;quot;的数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;db.createUser(&amp;#123; user: &amp;apos;root&amp;apos;, pwd: &amp;apos;123456&amp;apos;, roles: [ &amp;#123; role: &amp;quot;root&amp;quot;, db: &amp;quot;admin&amp;quot; &amp;#125; ] &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;db.createCollection(&amp;quot;Collection1&amp;quot;);  // 在&amp;quot;filedb&amp;quot;中创建一个名为&amp;quot;Images&amp;quot;的Collection&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://waylanpunch.github.io/tags/Java/"/>
    
      <category term="MongoDB" scheme="https://waylanpunch.github.io/tags/MongoDB/"/>
    
      <category term="Thymeleaf" scheme="https://waylanpunch.github.io/tags/Thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>docker-mongodb</title>
    <link href="https://waylanpunch.github.io/2019/07/27/docker-mongodb/"/>
    <id>https://waylanpunch.github.io/2019/07/27/docker-mongodb/</id>
    <published>2019-07-27T10:45:24.000Z</published>
    <updated>2019-07-27T11:01:21.474Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-Docker命令拉取MongoDB镜像&quot;&gt;&lt;a href=&quot;#1-Docker命令拉取MongoDB镜像&quot; class=&quot;headerlink&quot; title=&quot;1.Docker命令拉取MongoDB镜像&quot;&gt;&lt;/a&gt;1.Docker命令拉取MongoDB镜像&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker pull mongo:4.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="MongoDB" scheme="https://waylanpunch.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB Atlas平台使用教程</title>
    <link href="https://waylanpunch.github.io/2019/06/22/MongoDB-Atlas/"/>
    <id>https://waylanpunch.github.io/2019/06/22/MongoDB-Atlas/</id>
    <published>2019-06-22T13:31:22.000Z</published>
    <updated>2019-06-22T14:28:50.626Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;MongoDB Atlas是MongoDB的云平台。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="MongoDB" scheme="https://waylanpunch.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>69个经典Spring面试题和答案</title>
    <link href="https://waylanpunch.github.io/2018/12/17/Java%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%20-%207/"/>
    <id>https://waylanpunch.github.io/2018/12/17/Java后端技术 - 7/</id>
    <published>2018-12-16T17:20:05.000Z</published>
    <updated>2018-12-17T15:06:31.155Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;69个经典Spring面试题和答案&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;Java后端技术&quot;&gt;&lt;a href=&quot;#Java后端技术&quot; class=&quot;headerlink&quot; title=&quot;Java后端技术&quot;&gt;&lt;/a&gt;&lt;strong&gt;Java后端技术&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;1. 什么是spring?&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;Spring 是个java企业级应用的开源开发框架。Spring主要用来开发Java应用，但是有些扩展是针对构建J2EE平台的web应用。Spring 框架目标是简化Java企业级应用开发，并通过POJO为基础的编程模型促进良好的编程习惯。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 使用Spring框架的好处是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;轻量：&lt;/strong&gt;Spring 是轻量的，基本的版本大约2MB&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;控制反转：&lt;/strong&gt;Spring通过控制反转实现了松散耦合，对象们给出它们的依赖，而不是创建或查找依赖的对象们&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;面向切面的编程(AOP)：&lt;/strong&gt;Spring支持面向切面的编程，并且把应用业务逻辑和系统服务分开&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;容器：&lt;/strong&gt;Spring 包含并管理应用中对象的生命周期和配置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;MVC框架：&lt;/strong&gt;Spring的WEB框架是个精心设计的框架，是Web框架的一个很好的替代品&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;事务管理：&lt;/strong&gt;Spring 提供一个持续的事务管理接口，可以扩展到上至本地事务下至全局事务（JTA）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;异常处理：&lt;/strong&gt;Spring 提供方便的API把具体技术相关的异常（比如由JDBC，Hibernate or JDO抛出的）转化为一致的unchecked 异常&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://waylanpunch.github.io/tags/Java/"/>
    
      <category term="面试题" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
      <category term="面试" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Java面试题84题系列全集</title>
    <link href="https://waylanpunch.github.io/2018/12/16/Java%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%20-%206/"/>
    <id>https://waylanpunch.github.io/2018/12/16/Java后端技术 - 6/</id>
    <published>2018-12-15T17:20:05.000Z</published>
    <updated>2018-12-17T15:06:31.153Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Java面试题84题系列全集&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;Java后端技术&quot;&gt;&lt;a href=&quot;#Java后端技术&quot; class=&quot;headerlink&quot; title=&quot;Java后端技术&quot;&gt;&lt;/a&gt;&lt;strong&gt;Java后端技术&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;01.面试的整体流程&lt;/p&gt;
&lt;p&gt;02.java的垮平台原理&lt;/p&gt;
&lt;p&gt;03.搭建一个java的开发环境&lt;/p&gt;
&lt;p&gt;04.java中int占几个字节&lt;/p&gt;
&lt;p&gt;05.java面向对象的特征&lt;/p&gt;
&lt;p&gt;06.装箱和拆箱&lt;/p&gt;
&lt;p&gt;07.==和equals的区别&lt;/p&gt;
&lt;p&gt;08.String&lt;/p&gt;
&lt;p&gt;09.讲一下java中的集合&lt;/p&gt;
&lt;p&gt;10.ArrayList 和LinkedList的区别&lt;/p&gt;
&lt;p&gt;11.HashMap和HashTable的区别&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://waylanpunch.github.io/tags/Java/"/>
    
      <category term="面试题" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
      <category term="面试" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>2018年Java面试题汇总 - 5</title>
    <link href="https://waylanpunch.github.io/2018/12/15/Java%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%20-%205/"/>
    <id>https://waylanpunch.github.io/2018/12/15/Java后端技术 - 5/</id>
    <published>2018-12-14T17:20:05.000Z</published>
    <updated>2018-12-17T15:06:31.155Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;2018年Java面试题汇总 - 5&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;Java后端技术&quot;&gt;&lt;a href=&quot;#Java后端技术&quot; class=&quot;headerlink&quot; title=&quot;Java后端技术&quot;&gt;&lt;/a&gt;&lt;strong&gt;Java后端技术&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;一、Java相关&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;乐观悲观锁的设计，如何保证原子性，解决的问题；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;char和double的字节，以及在内存的分布是怎样；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对象内存布局，然后讲下对象的死亡过程？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对象头，详细讲下；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sync原理详细，sync内抛异常会怎样，死锁吗？还是释放掉？怎么排查死锁？死锁会怎样？有没有什么更好的替代方案？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;详细讲一下集合，HashSet源码，HashMap源码，如果要线程安全需要怎么做？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多线程是解决什么问题的？线程池解决什么问题？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;线程池，如何设计的，里面的参数有多少种，里面的工作队列和线程队列是怎样的结构，如果给你，怎样设计线程池？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AQS原理，ReentranLock源码，设计原理，整体过程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;继续聊多线程源码，sync原理，然后一个场景设计题；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;float f = 1.4f;double d = 1.4d; 与 float f = 1.5f;double d = 1.5d; 是否为true，内存是怎样的；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;split的源码，split(“a|b|c”);得出多少个数组；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把所有认识熟用的JUC( java.util.concurrent(简称JUC)包)下的类写出来，讲下使用，然后讲下原生的线程操作;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;开闭原则，解析工厂方法模式，建造者模式，区别。手撸出来。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;讲下JVM的大页模式，JVM内存模型;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;什么是敏捷开发，防御性编程，并行编程。Team Leader的思考;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;逃逸分析是什么，作用是什么，用途是什么;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;怎么认为一个类是线程安全？线程安全的定义是什么？Java有多少个关键字进行同步？为什么这样设计？（聊了一大堆，一堆为什么）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;两个线程设计题。记得一个是：t1,t2,t3，让t1，t2执行完才执行t3，原生实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;写个后缀表达式，为什么要设计后缀表达式，有什么好处？然后写下中缀。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;我看你做过性能优化，比如你怎么分析项目里面的OOM的，内存泄露呢？详细说思路;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;说下多线程，我们什么时候需要分析线程数，怎么分析，分析什么因素;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;抽象方法和类方法的区别，static的抽象方法可以吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;说下Java的克隆体系;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;涉及OOM、JVM优化、源码问题、数据库优化、多线程等问题;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CPU高？什么情况CPU高？解决什么问题？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;你有遇到过临界区问题吗？有遇到过吗？你在项目遇到这个问题是怎样解决的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;volatile关键字作用;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java的多态怎么实现;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解释一下自旋;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解释一下信号量;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;什么情况下会触发类加载；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java内存抖动严重，优化的思路；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://waylanpunch.github.io/tags/Java/"/>
    
      <category term="面试题" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
      <category term="面试" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>2018年Java面试题汇总 - 4</title>
    <link href="https://waylanpunch.github.io/2018/12/14/Java%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%20-%204/"/>
    <id>https://waylanpunch.github.io/2018/12/14/Java后端技术 - 4/</id>
    <published>2018-12-13T17:20:05.000Z</published>
    <updated>2018-12-17T15:06:31.153Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;2018年Java面试题汇总 - 4&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;Java后端技术&quot;&gt;&lt;a href=&quot;#Java后端技术&quot; class=&quot;headerlink&quot; title=&quot;Java后端技术&quot;&gt;&lt;/a&gt;&lt;strong&gt;Java后端技术&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;一、Java基础&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;为什么JVM调优经常会将-Xms和-Xmx参数设置成一样；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java线程池的核心属性以及处理流程；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java内存模型，方法区存什么；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CMS垃圾回收过程；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Full GC次数太多了，如何优化；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;直接内存如何管理的；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java线程池的几个参数的意义和实现机制；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java线程池使用无界任务队列和有界任务队列的优劣对比；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CountDownLatch和CyclicBarrier的区别；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java中有哪些同步方案（重量级锁、显式锁、并发容器、并发同步器、CAS、volatile、AQS等）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你的项目出现了内存泄露，怎么监控这个问题呢；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;标记清除和标记整理的区别和优缺点，为何标记整理会发生stop the world；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;线程池，如何根据CPU的核数来设计线程大小，如果是计算机密集型的呢，如果是IO密集型的呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;让你设计一个cache如何设计；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;String中hashcode是怎么实现的；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JDK中哪些实现了单例模式？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多个线程同时读写，读线程的数量远远⼤于写线程，你认为应该如何解决并发的问题？你会选择加什么样的锁？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;线程池内的线程如果全部忙，提交⼀个新的任务，会发⽣什么？队列全部塞满了之后，还是忙，再提交会发⽣什么？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;synchronized关键字锁住的是什么东西？在字节码中是怎么表示的？在内存中的对象上表现为什么？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;wait/notify/notifyAll⽅法需不需要被包含在synchronized块中？这是为什么？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ExecutorService你一般是怎么⽤的？是每个Service放一个还是个项目放一个？有什么好处？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://waylanpunch.github.io/tags/Java/"/>
    
      <category term="面试题" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
      <category term="面试" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>2018年Java面试题汇总 - 3</title>
    <link href="https://waylanpunch.github.io/2018/12/13/Java%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%20-%203/"/>
    <id>https://waylanpunch.github.io/2018/12/13/Java后端技术 - 3/</id>
    <published>2018-12-12T17:20:05.000Z</published>
    <updated>2018-12-17T15:06:31.153Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;2018年Java面试题汇总 - 3&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;Java后端技术&quot;&gt;&lt;a href=&quot;#Java后端技术&quot; class=&quot;headerlink&quot; title=&quot;Java后端技术&quot;&gt;&lt;/a&gt;&lt;strong&gt;Java后端技术&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;一、基础题&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;怎么解决Hash冲突；（开放地址法、链地址法、再哈希法、建立公共溢出区等）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;写出一个必然会产生死锁的伪代码；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Spring IoC涉及到的设计模式；（工厂模式、单利模式。。）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;toString()方法什么情况下需要重写；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;判断对象相等时，什么情况下只需要重写 equals()，什么情况下需要重写 equals(),hashcode()？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set内存放的元素为什么不可以重复，内部是如何保证和实现的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何保证分布式缓存的一致性(分布式缓存一致性hash算法?)？分布式session实现？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java 8流式迭代的好处？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;项目中用到的JDK的哪些特性？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;说一下TreeMap的实现原理？红黑树的性质？红黑树遍历方式有哪些？如果key冲突如何解决？setColor()方法在什么时候用？什么时候会进行旋转和颜色转换？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Spring的bean的创建时机？依赖注入的时机？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ArrayList和LinkList的删除一个元素的时间复杂度；（ArrayList是O(N)，LinkList是O(1)）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CopyOnWriteArrayList是什么；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;序列化和反序列化底层如何实现的（ObjectOutputStream 、ObjectInputStream、 readObject  writeObject）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何调试多线程的程序；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一个线程连着调用start两次会出现什么情况？（由于状态只有就绪、阻塞、执行，状态是无法由执行转化为执行的，所以会报不合法的状态！）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HashMap在什么时候时间复杂度是O（1），什么时候是O（n），什么时候又是O（logn）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;wait方法能不能被重写？（wait是final类型的，不可以被重写，不仅如此，notify和notifyall都是final类型的），wait能不能被中断；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一个Controller调用两个Service，这两Service又都分别调用两个Dao，问其中用到了几个数据库连接池的连接？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://waylanpunch.github.io/tags/Java/"/>
    
      <category term="面试题" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
      <category term="面试" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>2018年Java面试题汇总 - 2</title>
    <link href="https://waylanpunch.github.io/2018/12/12/Java%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%20-%202/"/>
    <id>https://waylanpunch.github.io/2018/12/12/Java后端技术 - 2/</id>
    <published>2018-12-11T17:20:05.000Z</published>
    <updated>2018-12-17T15:06:31.155Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;2018年Java面试题汇总 - 2&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;Java后端技术&quot;&gt;&lt;a href=&quot;#Java后端技术&quot; class=&quot;headerlink&quot; title=&quot;Java后端技术&quot;&gt;&lt;/a&gt;&lt;strong&gt;Java后端技术&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;一、Java相关&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Arraylist与LinkedList默认空间是多少；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Arraylist与LinkedList区别与各自的优势List 和 Map 区别；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;谈谈HashMap，哈希表解决hash冲突的方法；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为什么要重写hashcode()和equals()以及他们之间的区别与关系；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Object的hashcode()是怎么计算的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若hashcode方法永远返回1或者一个常量会产生什么结果？  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java Collections和Arrays的sort方法默认的排序方法是什么；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;引用计数法与GC Root可达性分析法区别；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;浅拷贝和深拷贝的区别；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;String s=”abc”和String s=new String(“abc”)区别；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HashSet方法里面的hashcode存在哪，如果重写equals不重写hashcode会怎么样？  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;反射的作用与实现原理；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java中的回调机制；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模板方法模式；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;开闭原则说一下；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发布/订阅使用场景；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;KMP算法（一种改进的字符串匹配算法）；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JMM里边的原子性、可见性、有序性是如何体现出来的，JMM中内存屏障是什么意思，&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://waylanpunch.github.io/tags/Java/"/>
    
      <category term="面试题" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
      <category term="面试" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络基础几道常见面试试题</title>
    <link href="https://waylanpunch.github.io/2018/12/11/Java%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%20-%208/"/>
    <id>https://waylanpunch.github.io/2018/12/11/Java后端技术 - 8/</id>
    <published>2018-12-10T17:20:05.000Z</published>
    <updated>2018-12-17T15:06:31.155Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;计算机网络基础几道常见面试试题&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;Java后端技术&quot;&gt;&lt;a href=&quot;#Java后端技术&quot; class=&quot;headerlink&quot; title=&quot;Java后端技术&quot;&gt;&lt;/a&gt;&lt;strong&gt;Java后端技术&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;1、OSI，TCP/IP，五层协议的体系结构，以及各层协议&lt;/p&gt;
&lt;p&gt;OSI分层 （7层）：物理层、数据链路层、网络层、传输层、会话层、表示层、应用层。&lt;/p&gt;
&lt;p&gt;TCP/IP分层（4层）：网络接口层、 网际层、运输层、 应用层。&lt;/p&gt;
&lt;p&gt;五层协议 （5层）：物理层、数据链路层、网络层、运输层、 应用层。&lt;/p&gt;
&lt;p&gt;每一层的协议如下：&lt;/p&gt;
&lt;p&gt;物理层：RJ45、CLOCK、IEEE802.3    （中继器，集线器，网关）；&lt;/p&gt;
&lt;p&gt;数据链路：PPP、FR、HDLC、VLAN、MAC  （网桥，交换机）；&lt;/p&gt;
&lt;p&gt;网络层：IP、ICMP、ARP、RARP、OSPF、IPX、RIP、IGRP、 （路由器）；&lt;/p&gt;
&lt;p&gt;传输层：TCP、UDP、SPX；&lt;/p&gt;
&lt;p&gt;会话层：NFS、SQL、NETBIOS、RPC；&lt;/p&gt;
&lt;p&gt;表示层：JPEG、MPEG、ASII；&lt;/p&gt;
&lt;p&gt;应用层：FTP、DNS、Telnet、SMTP、HTTP、WWW、NFS；&lt;/p&gt;
&lt;p&gt;每一层的作用如下：&lt;/p&gt;
&lt;p&gt;物理层：通过媒介传输比特,确定机械及电气规范（比特Bit）&lt;/p&gt;
&lt;p&gt;数据链路层：将比特组装成帧和点到点的传递（帧Frame）&lt;/p&gt;
&lt;p&gt;网络层：负责数据包从源到宿的传递和网际互连（包PackeT）&lt;/p&gt;
&lt;p&gt;传输层：提供端到端的可靠报文传递和错误恢复（段Segment）&lt;/p&gt;
&lt;p&gt;会话层：建立、管理和终止会话（会话协议数据单元SPDU）&lt;/p&gt;
&lt;p&gt;表示层：对数据进行翻译、加密和压缩（表示协议数据单元PPDU）&lt;/p&gt;
&lt;p&gt;应用层：允许访问OSI环境的手段（应用协议数据单元APDU）&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://waylanpunch.github.io/tags/Java/"/>
    
      <category term="面试题" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
      <category term="面试" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>2018年Java面试题汇总 - 1</title>
    <link href="https://waylanpunch.github.io/2018/12/11/Java%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%20-%201/"/>
    <id>https://waylanpunch.github.io/2018/12/11/Java后端技术 - 1/</id>
    <published>2018-12-10T17:20:05.000Z</published>
    <updated>2018-12-17T15:06:31.153Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;2018年Java面试题汇总 - 1&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;Java后端技术&quot;&gt;&lt;a href=&quot;#Java后端技术&quot; class=&quot;headerlink&quot; title=&quot;Java后端技术&quot;&gt;&lt;/a&gt;&lt;strong&gt;Java后端技术&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&quot;一、基础篇&quot;&gt;&lt;a href=&quot;#一、基础篇&quot; class=&quot;headerlink&quot; title=&quot;一、基础篇&quot;&gt;&lt;/a&gt;&lt;strong&gt;一、基础篇&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&quot;1-1、Java基础&quot;&gt;&lt;a href=&quot;#1-1、Java基础&quot; class=&quot;headerlink&quot; title=&quot;1.1、Java基础 &quot;&gt;&lt;/a&gt;&lt;strong&gt;1.1、Java基础 &lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;面向对象的特征：继承、封装和多态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;final, finally, finalize 的区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Exception、Error、运行时异常与一般异常有何异同&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;请写出5种常见到的runtime exception&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;int 和 Integer 有什么区别，Integer的值缓存范围&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;包装类，装箱和拆箱&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;String、StringBuilder、StringBuffer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重载和重写的区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;抽象类和接口有什么区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;说说反射的用途及实现&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;说说自定义注解的场景及实现&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTTP请求的GET与POST方式的区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Session与Cookie区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;列出自己常用的JDK包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MVC设计思想&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;equals与==的区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;hashCode和equals方法的区别与联系&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;什么是Java序列化和反序列化，如何实现Java序列化？或者请解释Serializable 接口的作用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Object类中常见的方法，为什么wait  notify会放在Object里边？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java的平台无关性如何体现出来的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JDK和JRE的区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java 8有哪些新特性&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://waylanpunch.github.io/tags/Java/"/>
    
      <category term="面试题" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
      <category term="面试" scheme="https://waylanpunch.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>利用Gogs搭建个人Git服务</title>
    <link href="https://waylanpunch.github.io/2018/10/11/gogs-personal-git-server/"/>
    <id>https://waylanpunch.github.io/2018/10/11/gogs-personal-git-server/</id>
    <published>2018-10-10T17:20:05.000Z</published>
    <updated>2018-10-10T17:35:25.098Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;服务器：&lt;/strong&gt; CentOS 7&lt;br&gt;&lt;strong&gt;容器：&lt;/strong&gt; Docker 18&lt;br&gt;&lt;strong&gt;环境：&lt;/strong&gt; MySQL 5.7 + Gogs:0.11.66&lt;/p&gt;
&lt;h2 id=&quot;1-Docker容器内安装MySQL&quot;&gt;&lt;a href=&quot;#1-Docker容器内安装MySQL&quot; class=&quot;headerlink&quot; title=&quot;1.Docker容器内安装MySQL&quot;&gt;&lt;/a&gt;1.Docker容器内安装MySQL&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker pull mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker pull registry.docker-cn.com/library/mysql:8.0.12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker pull registry.docker-cn.com/library/mysql:5.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker images |grep mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run --name mymysql -e MYSQL_ROOT_PASSWORD=123456 -d -i -p 3306:3306 6a834f03bd02&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/*数据卷的挂载*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run -i -t --name mymysql -p 3306:3306 -v /var/lib/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 563a026a1511&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;error: database is uninitialized and password option is not specified 
    You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ALLOW_EMPTY_PASSWORD and MYSQL_RANDOM_ROOT_PASSWORD
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="Git" scheme="https://waylanpunch.github.io/tags/Git/"/>
    
      <category term="Docker" scheme="https://waylanpunch.github.io/tags/Docker/"/>
    
      <category term="Gogs" scheme="https://waylanpunch.github.io/tags/Gogs/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7和Docker使用以及常用中间件安装指南</title>
    <link href="https://waylanpunch.github.io/2018/09/22/centos-middlewareguide/"/>
    <id>https://waylanpunch.github.io/2018/09/22/centos-middlewareguide/</id>
    <published>2018-09-22T13:31:16.000Z</published>
    <updated>2018-10-10T17:40:53.787Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Oracle-VM-Virtual-Box安装CentOS-7过程&quot;&gt;&lt;a href=&quot;#Oracle-VM-Virtual-Box安装CentOS-7过程&quot; class=&quot;headerlink&quot; title=&quot;Oracle VM Virtual Box安装CentOS 7过程&quot;&gt;&lt;/a&gt;Oracle VM Virtual Box安装CentOS 7过程&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/maty_wang/article/details/79127718&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Install&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;启动网络服务&quot;&gt;&lt;a href=&quot;#启动网络服务&quot; class=&quot;headerlink&quot; title=&quot;启动网络服务&quot;&gt;&lt;/a&gt;启动网络服务&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ip addr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi /etc/sysconfig/network-scripts/ifcfg-ens33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ONBOOT=yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo service network restart&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ip addr&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;关机-重启命令&quot;&gt;&lt;a href=&quot;#关机-重启命令&quot; class=&quot;headerlink&quot; title=&quot;关机/重启命令&quot;&gt;&lt;/a&gt;关机/重启命令&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/endv/p/6622452.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Shuntdown Command&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux centos重启命令：&lt;ul&gt;
&lt;li&gt;1、reboot   普通重启&lt;/li&gt;
&lt;li&gt;2、shutdown -r now 立刻重启(root用户使用)&lt;/li&gt;
&lt;li&gt;3、shutdown -r 10 过10分钟自动重启(root用户使用)&lt;/li&gt;
&lt;li&gt;4、shutdown -r 20:35 在时间为20:35时候重启(root用户使用)&lt;/li&gt;
&lt;li&gt;如果是通过shutdown命令设置重启的话，可以用shutdown -c命令取消重启&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Linux centos关机命令：&lt;ul&gt;
&lt;li&gt;1、halt 立刻关机&lt;/li&gt;
&lt;li&gt;2、poweroff 立刻关机&lt;/li&gt;
&lt;li&gt;3、shutdown -h now 立刻关机(root用户使用)&lt;/li&gt;
&lt;li&gt;4、shutdown -h 10 10分钟后自动关机&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Putty连接&quot;&gt;&lt;a href=&quot;#Putty连接&quot; class=&quot;headerlink&quot; title=&quot;Putty连接&quot;&gt;&lt;/a&gt;Putty连接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/zhcncn/p/4133999.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Putty&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/HD/p/4011323.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Firewall&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;安装Docker&quot;&gt;&lt;a href=&quot;#安装Docker&quot; class=&quot;headerlink&quot; title=&quot;安装Docker&quot;&gt;&lt;/a&gt;安装Docker&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/yufeng218/p/8370670.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Docker&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于国内访问不到docker官方镜像，可以通过aliyun的源来完成。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/doegoo/article/details/80062132&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;阿里云镜像&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo systemctl start docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo systemctl enable docker&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="Docker" scheme="https://waylanpunch.github.io/tags/Docker/"/>
    
      <category term="CentOS" scheme="https://waylanpunch.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot整合Swagger2并汉化</title>
    <link href="https://waylanpunch.github.io/2018/07/06/swagger2-spring/"/>
    <id>https://waylanpunch.github.io/2018/07/06/swagger2-spring/</id>
    <published>2018-07-06T14:05:01.000Z</published>
    <updated>2018-09-11T15:02:01.848Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文将介Swagger2，它可以轻松组织出强大RESTful API文档。它既可以减少我们创建文档的工作量，同时说明内容又整合入实现代码中，让维护文档和修改代码整合为一体，可以让我们在修改代码逻辑的同时方便的修改文档说明。另外Swagger2也提供了强大的页面测试功能来调试每个RESTful API，而不再需要Postman。&lt;/p&gt;
&lt;h1 id=&quot;Swagger2注解说明&quot;&gt;&lt;a href=&quot;#Swagger2注解说明&quot; class=&quot;headerlink&quot; title=&quot;Swagger2注解说明&quot;&gt;&lt;/a&gt;Swagger2注解说明&lt;/h1&gt;&lt;p&gt;Swagger通过注解表明该接口会生成文档，包括接口名、请求方法、参数、返回信息的等等。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Api：修饰整个类，描述Controller的作用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@ApiOperation：描述一个类的一个方法，或者说一个接口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@ApiParam：单个参数描述&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@ApiModel：用对象来接收参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@ApiProperty：用对象接收参数时，描述对象的一个字段&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@ApiResponse：HTTP响应其中1个描述&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@ApiResponses：HTTP响应整体描述&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@ApiIgnore：使用该注解忽略这个API&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@ApiError ：发生错误返回的信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@ApiImplicitParam：一个请求参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@ApiImplicitParams：多个请求参数&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;@Api：用在请求的类上，表示对类的说明&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tags=”说明该类的作用，可以在UI界面上看到的注解”&lt;/li&gt;
&lt;li&gt;value=”该参数没什么意义，在UI界面上也看到，所以不需要配置”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;@ApiOperation：用在请求的方法上，说明方法的用途、作用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;value=”说明方法的用途、作用”&lt;/li&gt;
&lt;li&gt;notes=”方法的备注说明”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;@ApiImplicitParams：用在请求的方法上，表示一组参数说明&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@ApiImplicitParam：用在@ApiImplicitParams注解中，指定一个请求参数的各个方面&lt;ul&gt;
&lt;li&gt;name：参数名&lt;/li&gt;
&lt;li&gt;value：参数的汉字说明、解释&lt;/li&gt;
&lt;li&gt;required：参数是否必须传&lt;/li&gt;
&lt;li&gt;paramType：参数放在哪个地方&lt;ul&gt;
&lt;li&gt;header –&amp;gt; 请求参数的获取：@RequestHeader&lt;/li&gt;
&lt;li&gt;query –&amp;gt; 请求参数的获取：@RequestParam&lt;/li&gt;
&lt;li&gt;path（用于restful接口）–&amp;gt; 请求参数的获取：@PathVariable&lt;/li&gt;
&lt;li&gt;body（不常用）&lt;/li&gt;
&lt;li&gt;form（不常用）    &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;dataType：参数类型，默认String，其它值dataType=”Integer”       &lt;/li&gt;
&lt;li&gt;defaultValue：参数的默认值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;@ApiResponses：用在请求的方法上，表示一组响应&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@ApiResponse：用在@ApiResponses中，一般用于表达一个错误的响应信息&lt;ul&gt;
&lt;li&gt;code：数字，例如400&lt;/li&gt;
&lt;li&gt;message：信息，例如”请求参数没填好”&lt;/li&gt;
&lt;li&gt;response：抛出异常的类&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;@ApiModel：用于响应类上，表示一个返回响应数据的信息，（这种一般用在post创建的时候，使用@RequestBody这样的场景，请求参数无法使用@ApiImplicitParam注解进行描述的时候）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@ApiModelProperty：用在属性上，描述响应类的属性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="Swagger2" scheme="https://waylanpunch.github.io/tags/Swagger2/"/>
    
      <category term="Spring" scheme="https://waylanpunch.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>使用Redis管理分布式Session</title>
    <link href="https://waylanpunch.github.io/2018/05/30/Process-Session-With-Redis/"/>
    <id>https://waylanpunch.github.io/2018/05/30/Process-Session-With-Redis/</id>
    <published>2018-05-30T15:32:18.000Z</published>
    <updated>2018-05-30T15:49:46.127Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用Redis管理分布式Session&quot;&gt;&lt;a href=&quot;#使用Redis管理分布式Session&quot; class=&quot;headerlink&quot; title=&quot;使用Redis管理分布式Session&quot;&gt;&lt;/a&gt;使用Redis管理分布式Session&lt;/h1&gt;&lt;p&gt;Redis 是一个强大而简单的键值型数据库，之前在公司网站改版的过程中大量使用 Redis 来处理一些特殊的需求，我希望能将自己对 Redis 的使用经验都分享出来，而这里算是第一篇吧。&lt;/p&gt;
&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;项目是一个有着不小访问量的网站，为了达到分流的作用，网站按照不同的业务（个人、企业、后台、营销、搜索、API等）区分成不同的子域名，而子域名下运行的是不同的实例。&lt;/p&gt;
&lt;p&gt;对用户登录这块的逻辑，原来的做法是将登录的明文信息（登录ID、用户名、姓名等）在登录过程中直接写入用户 cookie，当需要进行登录校验的时候，后台直接取出 cookie 中保存的ID进行处理。可以想象，这样的模式只要模拟或者盗取了客户端的 cookie 信息，对于客户来说几乎没有任何安全性的保障。&lt;/p&gt;
&lt;p&gt;由于用户的操作可能跨越多个实例，如果采用服务器 session 的机制的话，就需要解决 session 的共享问题，从技术的实现角度来说可能碰到的坑就更多了，于是我们利用了 Redis 来模拟服务器的 session。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="Redis" scheme="https://waylanpunch.github.io/tags/Redis/"/>
    
      <category term="Session" scheme="https://waylanpunch.github.io/tags/Session/"/>
    
  </entry>
  
  <entry>
    <title>开发笔记</title>
    <link href="https://waylanpunch.github.io/2018/05/24/DevelopmentLog/"/>
    <id>https://waylanpunch.github.io/2018/05/24/DevelopmentLog/</id>
    <published>2018-05-23T18:07:17.000Z</published>
    <updated>2018-05-30T15:50:03.615Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1、jQuery-countdown插件&quot;&gt;&lt;a href=&quot;#1、jQuery-countdown插件&quot; class=&quot;headerlink&quot; title=&quot;1、jQuery countdown插件&quot;&gt;&lt;/a&gt;1、jQuery countdown插件&lt;/h1&gt;&lt;p&gt;倒计时插件&lt;/p&gt;
&lt;h1 id=&quot;2、Spring-Boot引用js、css文件&quot;&gt;&lt;a href=&quot;#2、Spring-Boot引用js、css文件&quot; class=&quot;headerlink&quot; title=&quot;2、Spring Boot引用js、css文件&quot;&gt;&lt;/a&gt;2、Spring Boot引用js、css文件&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/CureRrzy/article/details/79350356&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/CureRrzy/article/details/79350356&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://waylanpunch.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://waylanpunch.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://waylanpunch.github.io/2018/03/31/hello-world/"/>
    <id>https://waylanpunch.github.io/2018/03/31/hello-world/</id>
    <published>2018-03-31T15:11:08.598Z</published>
    <updated>2018-04-01T09:02:57.236Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>已加入Electron中文简体翻译计划</title>
    <link href="https://waylanpunch.github.io/2017/12/12/2017-12-12-Electron-Translation/"/>
    <id>https://waylanpunch.github.io/2017/12/12/2017-12-12-Electron-Translation/</id>
    <published>2017-12-12T04:12:12.000Z</published>
    <updated>2018-04-01T09:27:16.923Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/WaylanPunch&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Waylan Punch&lt;/a&gt;已加入&lt;a
        
      
    
    </summary>
    
    
      <category term="Electron" scheme="https://waylanpunch.github.io/tags/Electron/"/>
    
      <category term="Translation" scheme="https://waylanpunch.github.io/tags/Translation/"/>
    
  </entry>
  
  <entry>
    <title>MathJax在网页中的使用</title>
    <link href="https://waylanpunch.github.io/2017/12/11/2017-12-11-MathJax-Usage/"/>
    <id>https://waylanpunch.github.io/2017/12/11/2017-12-11-MathJax-Usage/</id>
    <published>2017-12-11T14:16:04.000Z</published>
    <updated>2018-04-01T09:27:01.143Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;MathJax允许你在网页中使用LaTeX，MathML或AsciiMath注解来包含数学公式，这些数学公式将使用JavaScript处理HTML，SVG或MathML方程式来产生，以显示在任何浏览器中。&lt;/p&gt;
&lt;p&gt;有两种方法可以访问MathJax：最简单的方法是使用分布式网络服务（如cdnjs.com）提供的MathJax副本，但是也可以在本地机器上下载并安装MathJax的副本，或者在你的硬盘上使用（不需要网络访问）。 本文给出了在您的Web站点上运行MathJax的最快和最简单的方法，但是您可能需要去官网查阅更详细得信息以进行自定义页面的设置。&lt;/p&gt;
&lt;p&gt;#使用CDN&lt;/p&gt;
&lt;p&gt;使用MathJax最简单的方法是直接接入内容分发网络（CDN）提供的公共链接。&lt;br&gt;有许多免费的CDN提供商提供MathJax的副本。 一些提供“滚动版本”，即在发布时更新到最新可用版本的链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cdnjs.com（推荐）(&lt;a href=&quot;https://cdnjs.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://cdnjs.com/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;jsdelivr.com &lt;a href=&quot;https://jsdelivr.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;滚动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;unpkg.com &lt;a href=&quot;https://unpkg.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;滚动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;rawgit.com(&lt;a href=&quot;https://rawgit.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://rawgit.com/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;gitcdn.xyz(&lt;a href=&quot;http://gitcdn.xyz/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://gitcdn.xyz/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;raw.githack.com(&lt;a href=&quot;http://docs.mathjax.org/en/latest/raw.githack.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://docs.mathjax.org/en/latest/raw.githack.com&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如何接入？&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;async&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="MathJax" scheme="https://waylanpunch.github.io/tags/MathJax/"/>
    
      <category term="TeX" scheme="https://waylanpunch.github.io/tags/TeX/"/>
    
      <category term="LaTeX" scheme="https://waylanpunch.github.io/tags/LaTeX/"/>
    
      <category term="MathML" scheme="https://waylanpunch.github.io/tags/MathML/"/>
    
      <category term="AsciiMath" scheme="https://waylanpunch.github.io/tags/AsciiMath/"/>
    
  </entry>
  
  <entry>
    <title>基于LeanCloud Restful API的Retrofit编程</title>
    <link href="https://waylanpunch.github.io/2017/03/12/2017-03-12-leancloud-restfulapi-retrofit/"/>
    <id>https://waylanpunch.github.io/2017/03/12/2017-03-12-leancloud-restfulapi-retrofit/</id>
    <published>2017-03-12T12:13:52.000Z</published>
    <updated>2018-04-01T09:25:59.878Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基于LeanCloud-Restful-API的Retrofit编程&quot;&gt;&lt;a href=&quot;#基于LeanCloud-Restful-API的Retrofit编程&quot; class=&quot;headerlink&quot; title=&quot;基于LeanCloud Restful API的Retrofit编程&quot;&gt;&lt;/a&gt;基于LeanCloud Restful API的Retrofit编程&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;BaaS提供商LeanCloud提供了Restful API，没有提供Retrofit使用教程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;注册用户&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注册API设计：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -X POST \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &amp;quot;X-LC-Id: y0crQpaNCKUq9WFaSMLByoKo-gzGzoHsz&amp;quot; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &amp;quot;X-LC-Key: ihdOweBmtk9yrDbuPEbJfyBb&amp;quot; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &amp;quot;Content-Type: application/json&amp;quot; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -d &amp;apos;&amp;#123;&amp;quot;username&amp;quot;:&amp;quot;hjiang&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;f32@ds*@&amp;amp;dsa&amp;quot;,&amp;quot;phone&amp;quot;:&amp;quot;18612340000&amp;quot;&amp;#125;&amp;apos; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  https://api.leancloud.cn/1.1/users&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;登录API设计：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -X POST \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-H &amp;quot;Content-Type: application/json&amp;quot; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-H &amp;quot;X-LC-Id: y0crQpaNCKUq9WFaSMLByoKo-gzGzoHsz&amp;quot; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-H &amp;quot;X-LC-Key: ihdOweBmtk9yrDbuPEbJfyBb&amp;quot; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-d &amp;apos;&amp;#123;&amp;quot;username&amp;quot;:&amp;quot;hjiang&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;f32@ds*@&amp;amp;dsa&amp;quot;&amp;#125;&amp;apos; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://api.leancloud.cn/1.1/login&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Retrofit" scheme="https://waylanpunch.github.io/tags/Retrofit/"/>
    
  </entry>
  
</feed>
